{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b43cd527",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>house_age</th>\n",
       "      <th>distance_to_the_nearest_MRT_station</th>\n",
       "      <th>number_of_convenience_stores</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>house_price_of_unit_area</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2012.917</td>\n",
       "      <td>32.0</td>\n",
       "      <td>84.87882</td>\n",
       "      <td>10</td>\n",
       "      <td>24.98298</td>\n",
       "      <td>121.54024</td>\n",
       "      <td>37.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2012.917</td>\n",
       "      <td>19.5</td>\n",
       "      <td>306.59470</td>\n",
       "      <td>9</td>\n",
       "      <td>24.98034</td>\n",
       "      <td>121.53951</td>\n",
       "      <td>42.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2013.583</td>\n",
       "      <td>13.3</td>\n",
       "      <td>561.98450</td>\n",
       "      <td>5</td>\n",
       "      <td>24.98746</td>\n",
       "      <td>121.54391</td>\n",
       "      <td>47.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2013.500</td>\n",
       "      <td>13.3</td>\n",
       "      <td>561.98450</td>\n",
       "      <td>5</td>\n",
       "      <td>24.98746</td>\n",
       "      <td>121.54391</td>\n",
       "      <td>54.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2012.833</td>\n",
       "      <td>5.0</td>\n",
       "      <td>390.56840</td>\n",
       "      <td>5</td>\n",
       "      <td>24.97937</td>\n",
       "      <td>121.54245</td>\n",
       "      <td>43.1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   No  transaction_date  house_age  distance_to_the_nearest_MRT_station  \\\n",
       "0   1          2012.917       32.0                             84.87882   \n",
       "1   2          2012.917       19.5                            306.59470   \n",
       "2   3          2013.583       13.3                            561.98450   \n",
       "3   4          2013.500       13.3                            561.98450   \n",
       "4   5          2012.833        5.0                            390.56840   \n",
       "\n",
       "   number_of_convenience_stores  latitude  longitude  house_price_of_unit_area  \n",
       "0                            10  24.98298  121.54024                      37.9  \n",
       "1                             9  24.98034  121.53951                      42.2  \n",
       "2                             5  24.98746  121.54391                      47.3  \n",
       "3                             5  24.98746  121.54391                      54.8  \n",
       "4                             5  24.97937  121.54245                      43.1  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "#reading the csv file\n",
    "house_price = pd.read_csv('Real_Estate.csv')\n",
    "house_price.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "023503d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>house_age</th>\n",
       "      <th>distance_to_the_nearest_MRT_station</th>\n",
       "      <th>number_of_convenience_stores</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>house_price_of_unit_area</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012.917</td>\n",
       "      <td>32.0</td>\n",
       "      <td>84.87882</td>\n",
       "      <td>10</td>\n",
       "      <td>24.98298</td>\n",
       "      <td>121.54024</td>\n",
       "      <td>37.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012.917</td>\n",
       "      <td>19.5</td>\n",
       "      <td>306.59470</td>\n",
       "      <td>9</td>\n",
       "      <td>24.98034</td>\n",
       "      <td>121.53951</td>\n",
       "      <td>42.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2013.583</td>\n",
       "      <td>13.3</td>\n",
       "      <td>561.98450</td>\n",
       "      <td>5</td>\n",
       "      <td>24.98746</td>\n",
       "      <td>121.54391</td>\n",
       "      <td>47.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2013.500</td>\n",
       "      <td>13.3</td>\n",
       "      <td>561.98450</td>\n",
       "      <td>5</td>\n",
       "      <td>24.98746</td>\n",
       "      <td>121.54391</td>\n",
       "      <td>54.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012.833</td>\n",
       "      <td>5.0</td>\n",
       "      <td>390.56840</td>\n",
       "      <td>5</td>\n",
       "      <td>24.97937</td>\n",
       "      <td>121.54245</td>\n",
       "      <td>43.1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   transaction_date  house_age  distance_to_the_nearest_MRT_station  \\\n",
       "0          2012.917       32.0                             84.87882   \n",
       "1          2012.917       19.5                            306.59470   \n",
       "2          2013.583       13.3                            561.98450   \n",
       "3          2013.500       13.3                            561.98450   \n",
       "4          2012.833        5.0                            390.56840   \n",
       "\n",
       "   number_of_convenience_stores  latitude  longitude  house_price_of_unit_area  \n",
       "0                            10  24.98298  121.54024                      37.9  \n",
       "1                             9  24.98034  121.53951                      42.2  \n",
       "2                             5  24.98746  121.54391                      47.3  \n",
       "3                             5  24.98746  121.54391                      54.8  \n",
       "4                             5  24.97937  121.54245                      43.1  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#dropping no\n",
    "house_price = house_price.drop(columns = ['No'], axis = 1)\n",
    "house_price.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "2bc2742c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.hist('house_age', data = house_price)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9d8cd40b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#from the histogram, we see three groups of houses, houses around 15 years old, and old houses around 33 years old"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d7a51a17",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist('distance_to_the_nearest_MRT_station', data = house_price)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ace3ebaf",
   "metadata": {},
   "outputs": [],
   "source": [
    "#from the histogram we see that the distribution is right skewed, which means that there are some houses close to\n",
    "#the MRT station and others are far away."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "conda_amazonei_pytorch_latest_p37",
   "language": "python",
   "name": "conda_amazonei_pytorch_latest_p37"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
